# encoding: utf-8
# -*- mode: ruby -*-

# bootstrapped from
#https://medium.com/@JohnFoderaro/how-to-set-up-a-local-linux-environment-with-vagrant-163f0ba4da77

# Box / OS
VAGRANT_BOX = 'ubuntu/trusty64'

# Memorable name for your
VM_NAME = 'development'
# VM User — 'vagrant' by default
VM_USER = 'vagrant'

# # VM Port — uncomment this to use NAT instead of DHCP
VM_PORT = 8080

Vagrant.configure(2) do |config|
  # Vagrant box from Hashicorp
  config.vm.box = VAGRANT_BOX

  # Actual machine name
  config.vm.hostname = VM_NAME
  # Set VM name in Virtualbox
  config.vm.provider "virtualbox" do |v|
    v.name = VM_NAME
    v.memory = 4096
    v.cpus = 3
    v.gui = true

    # Small, necessary tweak to get windowing to work
    v.customize ["modifyvm", :id, "--vram", "256"]
    v.customize ["modifyvm", :id, "--accelerate3d", "on"]
    v.customize ["modifyvm", :id, "--clipboard", "bidirectional"]
  end

  #DHCP — comment this out if planning on using NAT instead
  # config.vm.network "private_network", type: "dhcp"
  # # Port forwarding — uncomment this to use NAT instead of DHCP
  config.vm.network "forwarded_port", guest: 80, host: VM_PORT

  # Disable default Vagrant folder, use a unique path per project
  config.vm.synced_folder '.', '/home/'+VM_USER+'', disabled: true

  # Allow xforwarding
  config.ssh.forward_x11 = true

  # Copy in our keypair
  config.vm.provision "file",
    source: "~/.ssh/id_ed25519",
    destination: "/home/vagrant/.ssh/id_ed25519"
  config.vm.provision "file",
    source: "~/.ssh/id_ed25519.pub",
    destination: "/home/vagrant/.ssh/id_ed25519.pub"

  # Setup our vagrant user to include everything we care about
  # 
  # NOTE: everything following this can rely on build
  # dependencies to exist
  config.vm.provision "shell", path: "provision.sh"

  # Include i3 configuration
  # 
  # This includes the explicit i3 config as well as our
  # workspaces and initialization script.
  config.vm.provision "file",
    source: "i3-config",
    destination: "/home/vagrant/.i3/config"
  config.vm.provision "file",
    source: "i3-startup.sh",
    destination: "/home/vagrant/.i3/i3-startup.sh"
  config.vm.provision "shell", inline: <<-SHELL
    chmod +x /home/vagrant/.i3/i3-startup.sh
  SHELL
  config.vm.provision "file",
    source: "workspace-1.json",
    destination: "/home/vagrant/.i3/workspace-1.json"
  config.vm.provision "file",
    source: "workspace-2.json",
    destination: "/home/vagrant/.i3/workspace-2.json"
  config.vm.provision "file",
    source: "workspace-3.json",
    destination: "/home/vagrant/.i3/workspace-3.json"

  # Include Xdefaults for styling
  config.vm.provision "file",
    source: "xDefaults",
    destination: "/home/vagrant/.Xdefaults"

  # Include nanorc
  config.vm.provision "file",
    source: "nanorc",
    destination: "/home/vagrant/.nanorc"

  # Include xinitrc
  config.vm.provision "file",
    source: "xinitrc",
    destination: "/home/vagrant/.xinitrc"

  # Include vs code settings
  # and configure extensions
  config.vm.provision "file",
    source: "vscode_settings.json",
    destination: "/home/vagrant/.config/Code/User/settings.json"
  config.vm.provision "file",
    source: "vscode_keybindings.json",
    destination: "/home/vagrant/.config/Code/User/keybindings.json"
  config.vm.provision "shell", inline: <<-SHELL
    extensions=(
      lukehoban.Go
      mohsen1.prettify-json
      naumovs.color-highlight
      eg2.tslint
    )
    for i in "${extensions[@]}"; do
      su -c "code --install-extension $i" vagrant
    done

    # Upgrade to newest version
    # 
    # provision.sh will install an old version so we can use
    # --install-extension
    apt-get update
    apt-get dist-upgrade -y
  SHELL

  # Include watcher convenience scripts
  config.vm.provision "file",
    source: "watch-free_mem.sh",
    destination: "/home/vagrant/gopath/watch-free_mem.sh"
  config.vm.provision "file",
    source: "watch-git_status.sh",
    destination: "/home/vagrant/gopath/watch-git_status.sh"

  # Include mononoki as an available font
  config.vm.provision "file",
    source: "mononoki-Regular.ttf",
    destination: "/home/vagrant/.fonts/mononoki-Regular.ttf"
  config.vm.provision "shell", inline: <<-SHELL
    fc-cache -fv
  SHELL

  # Include bash_profile
  # 
  # This automatically logs in tty8
  config.vm.provision "file",
    source: "bash_profile",
    destination: "/home/vagrant/.bash_profile"

  # Include tty8
  # 
  # This allows bootstrapping from tty8 to i3
  # Copy over then move to correct location as root
  config.vm.provision "file",
    source: "tty8.conf",
    destination: "/home/vagrant/tty8.conf"
  config.vm.provision "shell", inline: <<-SHELL
    mv /home/vagrant/tty8.conf /etc/init/tty8.conf
  SHELL

  # Reboot straight into i3
  config.vm.provision "shell", inline: <<-SHELL
    reboot
  SHELL
end
